language: android
sudo: false
android:
  components:
    # use the latest revision of Android SDK Tools
    - platform-tools
    - tools
    - build-tools-25.0.3
    - android-25

    # Additional components
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-22
jdk:
  - oraclejdk8
env:
  global:
    - _FORCE_LOGS=1
    - DEVICE=android
    - MOCHA_TIMEOUT=640000
    - RECURSIVE=
    - START_EMU=1
    - ANDROID_EMU_NAME=test
    - ANDROID_EMU_TARGET=android-21
    - ANDROID_EMU_ABI=armeabi-v7a
  matrix:
    - TEST=unit RECURSIVE=1
    - TEST=functional RECURSIVE=1
before_script:
  # node stuff
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
  - nvm install 6
  - npm install -g gulp
  - npm install -g mocha
  - npm install

  # android stuff
  - $(npm bin)/android-emu-travis-pre
  - android list targets
  - echo no | android create avd --force -n test -t android-21 --abi armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  # skip waiting for start until after,
  # since they can happen in parallel

  # build the espresso server
  - pushd espresso-server
  - ./gradlew clean assembleAndroidTest
  - popd

  # make sure the emulator is up and running
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
script:
  - gulp eslint && if [ -n "$RECURSIVE" ]; then mocha -t 240000 --recursive build/test/$TEST -g @skip-ci -i; else mocha -t 240000 build/test/$TEST -g @skip-ci -i; fi
after_success:
  - gulp coveralls
